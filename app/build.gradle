plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "org.jlleitschuh.gradle.ktlint" version "10.1.0"
}

String getPrivateApiKey() {
    def propFile = rootProject.file("./apikey.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['PRIVATE_API_KEY']
}

String getPublicApiKey() {
    def propFile = rootProject.file("./apikey.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['PUBLIC_API_KEY']
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "de.colognecode.superheroes"
        minSdk 24
        targetSdk 30
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "PRIVATE_API_KEY", getPrivateApiKey())
        buildConfigField("String", "PUBLIC_API_KEY", getPublicApiKey())

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    // Android Core
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'

    // Android Fragment
    def fragment_version = "1.3.6"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Layout
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // Navigation
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Image Loading
    def coil_version = '1.3.2'
    implementation "io.coil-kt:coil:$coil_version"

    // Dependency Injection
    def koin_version = '3.1.2'
    implementation "io.insert-koin:koin-android:$koin_version"

    // Logging
    def timber_version = '5.0.1'
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Networking
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    def ok_http_version = "4.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // Concurrency
    def coroutines_version = '1.4.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    // Database
    def room_version = '2.3.0'
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Unit Tests
    testImplementation 'junit:junit:4.13.2'

    // Integration + UI Tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

ktlint {
    verbose = true
    android = true
    outputToConsole = true
    outputColorName ="RED"
    disabledRules.addAll("no-wildcard-imports")
}